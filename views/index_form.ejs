<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Member Profile Form</title>
    <link href="https://oneearthonefamily.up.railway.app/assets/img/favicon_OEOF.jpg" rel="icon">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #ff7bbf;
        }

        .form-container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f9f9f9;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
        }

        .form-container h2 {
            text-align: center;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .form-group input,
        textarea {
            width: 95%;
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .form-group select {
            width: 100%;
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .form-group .badges {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .form-group .badges input {
            margin-right: 5px;
        }

        .form-group .options {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .form-group .options button {
            align-items: center;
  appearance: none;
  background-color: #FCFCFD;
  border-radius: 4px;
  border-width: 0;
  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,rgba(45, 35, 66, 0.3) 0 7px 13px -3px,#D6D6E7 0 -3px 0 inset;
  box-sizing: border-box;
  color: #36395A;
  cursor: pointer;
  display: inline-flex;
  font-family: "JetBrains Mono",monospace;
  height: 20px;
  justify-content: center;
  line-height: 1;
  list-style: none;
  overflow: hidden;
  padding-left: 16px;
  padding-right: 16px;
  position: relative;
  text-align: left;
  text-decoration: none;
  transition: box-shadow .15s,transform .15s;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  white-space: nowrap;
  will-change: box-shadow,transform;
  font-size: 10px;
        }

        .form-group .options button.selected {
            background-color: #c91212;
            color: white;
            border-color: #4CAF50;
        }

        .form-group button[type="submit"] {
            display: block;
            width: 100%;
            padding: 10px;
            font-size: 16px;
            background-color: black;
            color: rgba(255, 243, 243, 0.774);
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .form-group button:hover {
            background-color: black;
            color: wheat;
        }


/* CSS */
.button-17 {
  display: inline;
  display: inline-flex;
  align-items: center;
  appearance: none;
  background-color: #fff;
  border-radius: 24px;
  border-style: none;
  box-shadow: rgba(0, 0, 0, .2) 0 3px 5px -1px,rgba(0, 0, 0, .14) 0 6px 10px 0,rgba(0, 0, 0, .12) 0 1px 18px 0;
  box-sizing: border-box;
  color: #3c4043;
  cursor: pointer;
  display: inline-flex;
  fill: currentcolor;
  font-family: "Google Sans",Roboto,Arial,sans-serif;
  font-size: 14px;
  font-weight: 500;
  height: 30px;
  justify-content: center;
  letter-spacing: .25px;
  line-height: normal;
  max-width: 100%;
  overflow: visible;
  padding: 2px 24px;
  position: relative;
  text-align: center;
  text-transform: none;
  transition: box-shadow 280ms cubic-bezier(.4, 0, .2, 1),opacity 15ms linear 30ms,transform 270ms cubic-bezier(0, 0, .2, 1) 0ms;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  width: auto;
  will-change: transform,opacity;
  z-index: 0;
}

.button-17:hover {
  background: #F6F9FE;
  color: #174ea6;
}

.button-17:active {
  box-shadow: 0 4px 4px 0 rgb(60 64 67 / 30%), 0 8px 12px 6px rgb(60 64 67 / 15%);
  outline: none;
}

.button-17:focus {
  outline: none;
  border: 2px solid #4285f4;
}

.button-17:not(:disabled) {
  box-shadow: rgba(60, 64, 67, .3) 0 1px 3px 0, rgba(60, 64, 67, .15) 0 4px 8px 3px;
}

.button-17:not(:disabled):hover {
  box-shadow: rgba(60, 64, 67, .3) 0 2px 3px 0, rgba(60, 64, 67, .15) 0 6px 10px 4px;
}

.button-17:not(:disabled):focus {
  box-shadow: rgba(60, 64, 67, .3) 0 1px 3px 0, rgba(60, 64, 67, .15) 0 4px 8px 3px;
}

.button-17:not(:disabled):active {
  box-shadow: rgba(60, 64, 67, .3) 0 4px 4px 0, rgba(60, 64, 67, .15) 0 8px 12px 6px;
}

.button-17:disabled {
  box-shadow: rgba(60, 64, 67, .3) 0 1px 3px 0, rgba(60, 64, 67, .15) 0 4px 8px 3px;
}
.profile-image {
    display: block;
    margin: 0 auto 10px;
    width: 150px;
    height: 150px;
    border-radius: 50%;
    object-fit: cover;
    cursor: pointer;
    border: 2px solid #ccc;
    transition: border-color 0.3s;
}

.profile-image:hover {
    border-color: #4CAF50;
}
    </style>
</head>

<body>
    <div class="form-container">
        <!-- <h2>Create Your Profile</h2> -->
        <form action="/upload" method="POST" enctype="multipart/form-data" id="uploadForm">
            <label for="profile-photo" class="form-group">Profile Photo:</label>
            <input type="file" name="file" id="fileInput" required style="display: none;">
            <img src="https://img.icons8.com/?size=100&id=7211&format=png" alt="" onclick="document.getElementById('fileInput').click();" class="profile-image" id="profileImage">
         </input>
        <img id="imagePreview" src="" alt="Image Preview" class="profile-image" style="display: none;">
        <script>
            document.getElementById('fileInput').addEventListener('change', function(event) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    document.getElementById('profileImage').style.display = 'none';
                    // document.getElementById('').style.display = 'none';
                    reader.onload = function(e) {
                        const imagePreview = document.getElementById('imagePreview');
                        imagePreview.src = e.target.result;
                        imagePreview.style.display = 'block';
                    };
                    reader.readAsDataURL(file);
                }
            });
        </script>
           <center>
            <button type="submit" class="button-17">Save</button>
           </center>
        </form>
        <form id="profile-form" enctype="multipart/form-data">
            <div class="form-group" style="display: none;">
                <label for="profile-photo">Profile Photo:</label>
                <input type="file" id="profilePhoto" name="Photo" accept="image/*">
            </div>

            <div class="form-group">
                <label for="bio">Bio:</label>
                <textarea id="bio" name="bio" rows="5" placeholder="Write something about yourself..."
                    maxlength="500"></textarea>
            </div>

            <div class="form-group">
                <label for="country">Country:</label>
                <input type="text" id="country" name="country" placeholder="Enter your country" required>
            </div>
            <div class="form-group">
                <label>Interests:</label>
                <div class="options" id="interests-options">
                    <button type="button" data-value="Sports">Sports</button>
                    <button type="button" data-value="Music">Music</button>
                    <button type="button" data-value="Travel">Travel</button>
                    <button type="button" data-value="Reading">Reading</button>
                    <button type="button" data-value="Gaming">Gaming</button>
                    <button type="button" data-value="Technology">Technology</button>
                    <button type="button" data-value="Science">Science</button>
                    <button type="button" data-value="History">History</button>
                    <button type="button" data-value="Arts & Crafts">Arts & Crafts</button>
                    <button type="button" data-value="Astronomy">Astronomy</button>
                    <button type="button" data-value="Environmental Activism">Environmental Activism</button>
                    <button type="button" data-value="Fashion">Fashion</button>
                    <button type="button" data-value="Gardening">Gardening</button>
                    <button type="button" data-value="Health & Fitness">Health & Fitness</button>
                    <button type="button" data-value="Meditation">Meditation</button>
                    <button type="button" data-value="Photography">Photography</button>
                    <button type="button" data-value="Theater & Drama">Theater & Drama</button>
                    <button type="button" data-value="Social Media">Social Media</button>
                    <button type="button" data-value="Cooking">Cooking</button>
                    <button type="button" data-value="Exploring Cultures">Exploring Cultures</button>
                    <button type="button" data-value="Volunteering">Volunteering</button>
                </div>
            </div>

            <div class="form-group">
                <label>Hobbies:</label>
                <div class="options" id="hobbies-options">
                    <button type="button" data-value="Painting">Painting</button>
                    <button type="button" data-value="Dancing">Dancing</button>
                    <button type="button" data-value="Cooking">Cooking</button>
                    <button type="button" data-value="Photography">Photography</button>
                    <button type="button" data-value="Writing">Writing</button>
                    <button type="button" data-value="Drawing">Drawing</button>
                    <button type="button" data-value="Knitting">Knitting</button>
                    <button type="button" data-value="Woodworking">Woodworking</button>
                    <button type="button" data-value="DIY Projects">DIY Projects</button>
                    <button type="button" data-value="Hiking">Hiking</button>
                    <button type="button" data-value="Camping">Camping</button>
                    <button type="button" data-value="Birdwatching">Birdwatching</button>
                    <button type="button" data-value="Baking">Baking</button>
                    <button type="button" data-value="Sculpting">Sculpting</button>
                    <button type="button" data-value="Acting">Acting</button>
                    <button type="button" data-value="Playing Musical Instruments">Playing Musical Instruments</button>
                    <button type="button" data-value="Collecting">Collecting</button>
                    <button type="button" data-value="Video Editing">Video Editing</button>
                    <button type="button" data-value="Calligraphy">Calligraphy</button>
                    <button type="button" data-value="Fishing">Fishing</button>
                </div>
            </div>

            <div class="form-group">
                <label for="family-role">Family Role:</label>
                <select id="family-role" name="familyRole" required>
                    <option value="">Select your role</option>
                    <option value="Guardian">Guardian</option>
                    <option value="Explorer">Explorer</option>
                    <option value="Peacemaker">Peacemaker</option>
                </select>
            </div>
            <div class="form-group">
                <label>Badges/Levels:</label>
                <div class="badges">
                    <label><input type="checkbox" name="badges[]" value="Cultural Contributor"> Cultural
                        Contributor</label>
                    <label><input type="checkbox" name="badges[]" value="Eco Warrior"> Eco Warrior</label>
                    <label><input type="checkbox" name="badges[]" value="Tech Innovator"> Tech Innovator</label>
                    <label><input type="checkbox" name="badges[]" value="Community Helper"> Community Helper</label>
                </div>
            </div>
            <div class="form-group">
                <button type="submit">Submit Profile</button>
            </div>
        </form>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // References to buttons and form elements
            const interestsButtons = document.querySelectorAll('#interests-options button');
            const hobbiesButtons = document.querySelectorAll('#hobbies-options button');
            const form = document.getElementById('profile-form');
            const submitButton = form.querySelector('button[type="submit"]');

            // Utility function to toggle the "selected" class
            function toggleSelection(event) {
                event.target.classList.toggle('selected');
            }

            // Attach click event listeners to hobby and interest buttons
            interestsButtons.forEach(button => button.addEventListener('click', toggleSelection));
            hobbiesButtons.forEach(button => button.addEventListener('click', toggleSelection));

            // Function to collect selected options
            function getSelectedOptions(buttons) {
                return Array.from(buttons)
                    .filter(button => button.classList.contains('selected'))
                    .map(button => button.getAttribute('data-value'));
            }

            // Form submission handler
            form.addEventListener('submit', async (event) => {
                event.preventDefault(); // Prevent default form submission
                // const profilePhotoInput = document.getElementById('profilePhoto');
                // const profilePhoto = profilePhotoInput.files[0];

                // Collect data from the form
                const formData = new FormData(form);
                // formData.append('profilePhoto', profilePhoto);
                const data = Object.fromEntries(formData.entries());


                // Add selected hobbies and interests
                data.interests = getSelectedOptions(interestsButtons);
                data.hobbies = getSelectedOptions(hobbiesButtons);
                console.log('hobboes', data.hobbies);

                // Validate required fields
                if (!data.bio?.trim() || !data.country?.trim() || !data.familyRole?.trim()) {
                    alert('Please fill out all required fields.');
                    return;
                }

                formData.append('hobbies', JSON.stringify(getSelectedOptions(hobbiesButtons)));
                formData.append('interests', JSON.stringify(getSelectedOptions(interestsButtons)));

                // Collect selected badges
                data.badges = formData.getAll('badges[]') || [];

                // Disable the submit button to prevent multiple submissions
                submitButton.disabled = true;

                try {
                    // Include JWT token if available
                    const jwt = localStorage.getItem('jwt');
                    if (!jwt) {
                        throw new Error('Token not found. Please log in.');
                    }

                    // Send data to the server
                    const response = await fetch('/submit-profile', {
                        method: 'POST',
                        headers: {
                            'Authorization': `Bearer ${jwt}`,

                        },
                        body: formData,
                    });

                    if (response.ok) {
                        const result = await response.json();
                        alert('Profile submitted successfully!');
                        console.log('Server response:', result);
                        form.reset(); // Clear the form
                        async function redirectToDashboard() {
                            const primaryUrl = 'https://oneearthonefamily.up.railway.app/dashboards';
                            const fallbackUrl = 'http://localhost:4000/dashboards';

                            try {
                                const response = await fetch(primaryUrl, { method: 'HEAD' }); // Check if the primary URL is reachable
                                if (response.ok) {
                                    window.location.href = primaryUrl; // Redirect to the primary URL
                                } else {
                                    throw new Error('Primary URL not reachable'); // Throw an error if the response is not OK
                                }
                            } catch (error) {
                                console.error(error);
                                window.location.href = fallbackUrl; // Redirect to the fallback URL
                            }
                        }

                        // Call the function to perform the redirection
                        redirectToDashboard();

                    } else {
                        const error = await response.json();
                        console.error('Error submitting profile:', error.message || response.statusText);
                        alert(`Error: ${error.message || 'An unknown error occurred.'}`);
                    }
                } catch (error) {
                    console.error('Submission error:', error);
                    alert('An error occurred. Please try again.');
                } finally {
                    submitButton.disabled = false; // Re-enable the submit button
                }
            });
        });

        document.addEventListener('DOMContentLoaded', () => {
        document.getElementById('uploadForm').addEventListener('submit', async (event) => {
            event.preventDefault();

            const fileInput = document.getElementById('fileInput');
            const token = localStorage.getItem('jwt');

            if (!token) {
                console.error('Token missing.');
                return;
            }

            if (fileInput.files && fileInput.files[0]) {
                const file = fileInput.files[0];
                const formData = new FormData();
                formData.append('file', file);

                try {
                    const response = await fetch('/upload', {
                        method: 'POST',
                        headers: {
                            Authorization: `Bearer ${token}`
                        },
                        body: formData
                    });

                    if (response.ok) {
                        const data = await response.json();
                        console.log('Upload successful:', data);
                        document.getElementsByClassName('button-17')[0].innerText = 'Saved';
                        // Handle success
                    } else {
                        console.error('Upload failed:', await response.json());
                        // Handle error
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            } else {
                console.error('No file selected.');
            }
        });
    });

    </script>
</body>

</html>